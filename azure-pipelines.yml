trigger:
- main

# Microsoft-hosted لتفادي مشاكل الشبكة في الـ self-hosted
pool:
  vmImage: 'windows-latest'

variables:
  system.debug: true

steps:
# جلب التاريخ كامل
- checkout: self
  fetchDepth: 0

# ===== Python 3.10 =====
- task: UsePythonVersion@0
  displayName: "Set Python 3.10"
  inputs:
    versionSpec: '3.10'

# ===== Install =====
- task: PowerShell@2
  displayName: "Install dependencies"
  inputs:
    targetType: 'inline'
    script: |
      python -V
      python -m pip install --upgrade pip
      python -m pip install -r requirements.txt

# ===== Lint =====
- task: PowerShell@2
  displayName: "Lint"
  inputs:
    targetType: 'inline'
    script: |
      python -m pylint --disable=R,C,E0401 hello.py

# ===== Test =====
- task: PowerShell@2
  displayName: "Test"
  inputs:
    targetType: 'inline'
    script: |
      python -m pytest -vv

# ===== إثبات أن hello.py فيه العنوان الجديد قبل النشر =====
- task: PowerShell@2
  displayName: "Show commit & hello.py header"
  inputs:
    targetType: 'inline'
    script: |
      git rev-parse --short HEAD
      Get-Content "$(Build.SourcesDirectory)\hello.py" -TotalCount 30
      $content = Get-Content "$(Build.SourcesDirectory)\hello.py" -Raw
      if ($content -notmatch 'Sklearn Prediction Home - Continuous Delivery') {
        Write-Error "Expected CD header not found in hello.py"
      }

# ===== Archive (zip) =====
- task: ArchiveFiles@2
  displayName: "Archive app"
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true

# ===== Deploy (Zip Deploy صريح + أخذ التطبيق offline لحظة النشر) =====
- task: AzureWebApp@1
  displayName: "Deploy to Azure Web App"
  inputs:
    azureSubscription: 'AZURE_SP_CONNECTION'   # تأكد الاسم يطابق Service Connection
    appName: 'rayan-ci-cd-app-we'
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
    deploymentMethod: 'zipDeploy'
    TakeAppOfflineFlag: true

# (اختياري) Warm-up سريع بعد النشر
- task: PowerShell@2
  displayName: "Warm-up site"
  inputs:
    targetType: 'inline'
    script: |
      try { Invoke-WebRequest -UseBasicParsing "https://rayan-ci-cd-app-we.azurewebsites.net/" | Out-Null } catch {}
      Start-Sleep -Seconds 10

# ===== Verify after deploy (with retries) =====
- task: PowerShell@2
  displayName: "Verify live site & /predict (with retries)"
  inputs:
    targetType: 'inline'
    script: |
      $max = 24  # يحاول لمدة ~دقيقتين (كل 5 ثواني)
      $ok = $false
      for ($i=1; $i -le $max; $i++) {
        try {
          $resp = Invoke-WebRequest -UseBasicParsing "https://rayan-ci-cd-app-we.azurewebsites.net/"
          if ($resp.StatusCode -ge 200 -and $resp.StatusCode -lt 500 -and ($resp.Content -match "Sklearn Prediction Home - Continuous Delivery")) {
            Write-Host "Homepage OK on attempt $i"
            $ok = $true; break
          }
        } catch {}
        Start-Sleep -Seconds 5
      }
      if (-not $ok) { Write-Error "Homepage not ready or header missing after retries" }

      $body = '{"data":[1,2,3,4]}'
      $ok2 = $false
      for ($i=1; $i -le $max; $i++) {
        try {
          $p = Invoke-WebRequest -UseBasicParsing -Method POST `
               -Uri "https://rayan-ci-cd-app-we.azurewebsites.net/predict" `
               -ContentType "application/json" -Body $body
          if ($p.StatusCode -ge 200 -and $p.StatusCode -lt 500 -and ($p.Content -match '"sum"\s*:\s*10')) {
            Write-Host "/predict OK on attempt $i"
            $ok2 = $true; break
          }
        } catch {}
        Start-Sleep -Seconds 5
      }
      if (-not $ok2) { Write-Error "/predict did not return expected JSON after retries" }
      Write-Host "Live verify OK ✅"
